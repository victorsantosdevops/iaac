version: 0.2
env:
  secrets-manager:
    AWS_ACCESS_KEY_ID: prod/dsapps/devops:aws_access_key_id
        AWS_SECRET_ACCESS_KEY: prod/dsapps/devops:aws_secret_access_key
    SONARQUBE_DATABASE_HOST: prod/dsapps/devops:SONARQUBE_DATABASE_HOST
    SONARQUBE_DATABASE_PORT_NUMBER: prod/dsapps/devops:SONARQUBE_DATABASE_PORT_NUMBER
    SONARQUBE_DATABASE_USER: prod/dsapps/devops:SONARQUBE_DATABASE_USER
    SONARQUBE_DATABASE_NAME: prod/dsapps/devops:SONARQUBE_DATABASE_NAME
    SONARQUBE_DATABASE_PASSWORD: prod/dsapps/devops:SONARQUBE_DATABASE_PASSWORD

phases:
  pre_build:
    commands:
      - docker login -u mosaicdevops -p 123mudar#
      - pip install awscli --upgrade --user
      - echo `aws --version`
      - echo Installing Node 8
#      - curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
#      - apt-get install -y nodejs
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region ${region} --no-include-email)
      - REPOSITORY_URI=${repository_url}
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Entered the pre_build phase...
#      - npm install
  build:
    commands:
      - echo Build started on `date`
      - echo Starting Unit Tests
#      - npm run unit-test
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"${container_name}","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: imagedefinitions.json

